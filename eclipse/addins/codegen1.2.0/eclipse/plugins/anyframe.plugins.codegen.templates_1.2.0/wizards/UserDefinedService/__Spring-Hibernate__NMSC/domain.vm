#set($columns = $model.fields)
#set($pks = $model.primaryKeys)
#set($pk = $listTool.get($pks, 0))
#set($pk_upper = $pk.toUpperCase())
#set($pk_cap = $pk.javaName)
#set($pk_uncap = $pk.fieldName)
#set($domain_cap = "$domainClass")
#set($domain_uncap = "$domain_cap.substring(0,1).toLowerCase()$domain_cap.substring(1)")
#if ($domainPackage_package != "")
#set($tableName = $model.name)
package $domainPackage_package;
#end

/**
 * File Name    : ${domainClass}.java
 * Author       :#if($author) $author #else admin #end

 * Created on ${date}
 *
 * Copyright(c) 2010 NMSC Co., Ltd. All rights reserved.
 *
 */

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.SequenceGenerator;

import kr.go.nmsc.common.domain.BaseDomain;

@Entity
@Table(name="$tableName")
@SequenceGenerator(name="${pk.name}_GENERATOR", sequenceName="SEQ_${pk.name}", initialValue=1, allocationSize=1)
public class $domainClass extends BaseDomain {

#foreach($column in $columns)
#set($isPk = "false")
#foreach($pk in $pks)
#if ($column.fieldName==$pk.fieldName)
#set($isPk = "true")
#end
#end
#if ($isPk=="true")
	@Id
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="${pk.name}_GENERATOR")
#if ($column.javaType == "java.lang.String")
	@Column(name = "$column.name")
	private String $column.name;
#elseif ($column.javaType == "java.lang.Integer")
	@Column(name = "$column.name")
	private Integer $column.name;
#elseif ($column.javaType == "java.lang.Double")
	@Column(name = "$column.name")
	private Integer $column.name;
#elseif ($column.javaType == "java.lang.Float")
	@Column(name = "$column.name")
	private Float $column.name;
#else
	@Column(name = "$column.name")
	private String $column.name;
#end
#else
#if ($column.javaType == "java.lang.String")
	@Column(name = "$column.name")
	private String $column.name;
#elseif ($column.javaType == "java.lang.Integer")
	@Column(name = "$column.name")
	private Integer $column.name;
#elseif ($column.javaType == "java.lang.Double")
	@Column(name = "$column.name")
	private Integer $column.name;
#elseif ($column.javaType == "java.lang.Float")
	@Column(name = "$column.name")
	private Float $column.name;
#else
	@Column(name="$column.name")
	private String $column.name;
#end	
#end
#end

#foreach($column in $columns)
#if ($column.javaType == "java.lang.String")
	public String get${column.name}() {
		return $column.name;
	}
#elseif ($column.javaType == "java.lang.Integer")
	public Integer get${column.name}() {
		return $column.name;
	}
#elseif ($column.javaType == "java.lang.Double")
	public Integer get${column.name}() {
		return $column.name;
	}
#elseif ($column.javaType == "java.lang.Float")
	public Float get${column.name}() {
		return $column.name;
	}
#else
	public String get${column.name}() {
		return $column.name;
	}
#end
#if ($column.javaType == "java.lang.String")
	public void set${column.name}(String $column.name) {
		this.$column.name = $column.name;
	}
#elseif ($column.javaType == "java.lang.Integer")
	public void set${column.name}(Integer $column.name) {
		this.$column.name = $column.name;
	}
#elseif ($column.javaType == "java.lang.Double")
	public void set${column.name}(Integer $column.name) {
		this.$column.name = $column.name;
	}
#elseif ($column.javaType == "java.lang.Float")
	public void set${column.name}(Float $column.name) {
		this.$column.name = $column.name;
	}
#else
	public void set${column.name}(String $column.name) {
		this.$column.name = $column.name;
	}
#end
#end

	public String toString() {
		final String TAB = "    ";
		StringBuffer retValue = new StringBuffer();
		retValue.append("$domainClass ( ");
		retValue.append(TAB);
		retValue.append(super.toString());
		retValue.append(TAB);
#foreach($column in $columns)
		retValue.append("$column.name = ");
		retValue.append(this.$column.name);
		retValue.append(TAB);
#end
		retValue.append(" )");

		return retValue.toString();
	}
}