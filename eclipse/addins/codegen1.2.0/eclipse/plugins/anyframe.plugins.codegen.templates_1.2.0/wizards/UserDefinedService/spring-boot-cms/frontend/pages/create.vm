#set ($d = "$")
#set($tableName = $model.name)
#set($columns = $model.fields)
#set($primaryKeys = $model.primaryKeys)
#set($pks = $model.primaryKeys)
#set($pk = $listTool.get($pks, 0))
#set($pk_cap = $pk.javaName)
#set($pk_uncap = $pk.fieldName)
#set($pk_column = $listTool.get($primaryKeys,0))
#set($domain_cap = "$domainClass")
#set($domain_uncap = "$domain_cap.substring(0,1).toLowerCase()$domain_cap.substring(1)")
##===================================
#set($columns = $model.fields)
#set ($nonPkColumns = [])
#foreach($column in $columns)
#if ($column.name != "created_datetime" && $column.name != "modified_datetime")
#set($isPk = false)
#foreach($pk in $pks)
#if ($column.fieldName==$pk.fieldName)
#set($isPk = true)
#end
#end
#if ($isPk == false)
#set ($swallow = $nonPkColumns.add($column))
#end
#end
#end
##===================================
<template>
  <v-container>
    <${moduleKebabName}-form :form-data="form" :is-create="true" @on-submit="submit" />
  </v-container>
</template>

<script lang="ts">
import { ${domain_cap} } from '${moduleKebabName}';

export default {
  asyncData() {
    return {
      form: {} as ${domain_cap},
    };
  },
  data() {
    return {
      form: {} as ${domain_cap},
    };
  },
  methods: {
    async submit(${domain_uncap}: ${domain_cap}) {
      this.${d}showProgressbar();
      await this.${d}${domain_uncap}Api.create${domain_cap}(#if($nonPkColumns.size() > 0)#set($i = 1)#foreach($column in $nonPkColumns)${domain_uncap}.$column.fieldName#if( $i < $nonPkColumns.size() ), #end#set($i = $i + 1)#end#end);
      this.${d}hideProgressbar();
      this.${d}goList('/${moduleKebabName}');
    },
  },
};
</script>

<style scoped></style>
