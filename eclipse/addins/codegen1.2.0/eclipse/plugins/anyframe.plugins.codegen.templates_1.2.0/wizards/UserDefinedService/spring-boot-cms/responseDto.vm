#set($tableName = $model.name)
#set($columns = $model.fields)
#set($primaryKeys = $model.primaryKeys)
#set($pks = $model.primaryKeys)
#set($pk = $listTool.get($pks, 0))
#set($pk_cap = $pk.javaName)
#set($pk_uncap = $pk.fieldName)
#set($pk_column = $listTool.get($primaryKeys,0))
#set($domain_cap = "$domainClass")
#set($domain_uncap = "$domain_cap.substring(0,1).toLowerCase()$domain_cap.substring(1)")
#if ($dtoPackage_package != "")
package $dtoPackage_package;
#end
#set($dateCount = 0)
#foreach($column in $columns)
#if ($column.type == "DATE" || $column.type == "DATETIME")
#set($dateCount = $dateCount+1)
#end
#end
##===================================
#set($varcharCount = 0)
#foreach($column in $columns)
#if ($column.javaType == "java.lang.String")
#set($varcharCount = $varcharCount+1)
#end
#end
##===================================
#set($notEmptyCount = 0)
#set($notNullCount = 0)
#foreach($column in $columns)
#if ($column.nullable == false)
#if ($column.type=="INT" || $column.type=="DOUBLE" || $column.type=="FLOAT" || $column.type=="NUMBER" || $column.type=="int" || $column.type=="double" || $column.type=="float" || $column.type=="number" || $column.type == "DATE" || $column.type == "DATETIME")
#set($notNullCount = $notNullCount+1)
#else
#set($notEmptyCount = $notEmptyCount+1)
#end
#end
#end

import lombok.Data;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;
import ${domainPackage_package}.${domainClass};
#if ($dateCount > 0)
import java.time.LocalDateTime;
#end

@Data
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class ${responseFile} extends BaseEntity {

#foreach($column in $columns)
#set($isPk = false)
#foreach($pk in $pks)
#if ($column.fieldName==$pk.fieldName)
#set($isPk = true)
#end
#end
#if ($column.javaType == "java.lang.String")
    private String $column.fieldName;
#elseif ($column.javaType == "java.lang.Integer")
    private Integer $column.fieldName;
#elseif ($column.javaType == "java.lang.Long")
    private Long $column.fieldName;
#elseif ($column.javaType == "java.lang.Double")
    private Double $column.fieldName;
#elseif ($column.javaType == "java.lang.Float")
    private Float $column.fieldName;
#elseif ($column.type == "DATE" || $column.type == "DATETIME")
    private Date $column.fieldName;
#else
    private String $column.fieldName;
#end

#end

    public ${responseFile} of(${domain_cap} ${domain_uncap}) {
        return ${responseFile}.builder()
#foreach($column in $columns)
            .${column.fieldName}(${domain_uncap}.get$column.fieldName.substring(0,1).toUpperCase()$column.fieldName.substring(1)())
#end
            .build();
    }

}