#if($beanId_cap.lastIndexOf("Service") != -1)
#set($obj = $beanId_cap.substring(0,$beanId_cap.lastIndexOf("Service")))
#else
#set($obj = $beanId_cap)
#end
##set($domain_cap = "$obj.substring(2)")
##set($domain_uncap = "$domain_cap.substring(0,1).toLowerCase()$domain_cap.substring(1)")
#set($domain_cap = "$domainClass")
#set($postfixCutIndex =  $domain_cap.length() - 2)
#set($postfix = "$domain_cap.substring($postfixCutIndex,$domain_cap.length())")
#if($postfix.equals("VO"))
#set($domainName = "$domain_cap.substring(0,$postfixCutIndex)")
#else
#set($domainName = "$domain_cap")
#end
#set($domainName_uncap = "$domainName.substring(0,1).toLowerCase()$domainName.substring(1)")
#set($domain_uncap = "$domain_cap.substring(0,1).toLowerCase()$domain_cap.substring(1)")
#set($daoClass_uncap = "$daoClass.substring(0,1).toLowerCase()$daoClass.substring(1)")
#set($tableName = $model.name)
#set($queryName = $tableName.replaceAll("_",""))
#set($queryName = "$queryName.substring(0,1).toUpperCase()$queryName.substring(1).toLowerCase()")
#set($primaryKeys = $model.primaryKeys)
#set($pks = $model.primaryKeys)
#set($pk = $listTool.get($pks, 0))
#set($pk_cap = $pk.javaName)
#set($pk_uncap = $pk.fieldName)
#foreach( $item in $primaryKey.split(":") )
	#set($ret = $pk_cap.add("$item.substring(0,1).toUpperCase()$item.substring(1).toLowerCase()"))
	#set($ret = $pk_uncap.add($item))
#end
##===================================
#if(${daoPackage_package} != "")
package ${daoPackage_package};
#end

import java.util.List;
import org.springframework.stereotype.Repository;
import egovframework.rte.psl.dataaccess.EgovAbstractDAO;
import ${domainPackage_package}.${domain_cap};


/**
 * 프로그램 파일명 : ${daoClass}.java
 *
 * 프로그램 설명 : $tableName 테이블의 데이터를 핸들링하는 DAO 클래스
 *
 * 작 성 자 : ${writerName}
 *
 * 작 성 일 : ${writeDate}
 *
 * Copyright(c) 2014 DAEYOON Co. Ltd. All rights reserved.
 */
@Repository("${daoClass_uncap}")
public class ${daoClass} extends EgovAbstractDAO {
#if($primaryKeys.size() == 1)

	@SuppressWarnings("deprecation")
	public int select${domainName}NextId() throws Exception {
		return ((Integer) getSqlMapClientTemplate().queryForObject("${daoClass_uncap}.select${domainName}NextId")).intValue();
	}
#elseif($primaryKeys.size() > 1)

	@SuppressWarnings("deprecation")
	public int select${domainName}NextId(${domain_cap} ${domain_uncap}) throws Exception {
		return ((Integer) getSqlMapClientTemplate().queryForObject("${daoClass_uncap}.select${domainName}NextId", ${domain_uncap})).intValue();
	}
#end

	public ${domain_cap} select${domainName}(${domain_cap} ${domain_uncap}) throws Exception {
		return (${domain_cap}) selectByPk("${daoClass_uncap}.select${domainName}", ${domain_uncap});
	}

	@SuppressWarnings("unchecked")
	public List<${domain_cap}> select${domainName}AllList(${domain_cap} ${domain_uncap}) throws Exception {
		return list("${daoClass_uncap}.select${domainName}AllList", ${domain_uncap});
	}

	@SuppressWarnings("unchecked")
	public List<${domain_cap}> select${domainName}List(${domain_cap} ${domain_uncap}) throws Exception {
		return list("${daoClass_uncap}.select${domainName}List", ${domain_uncap});
	}

	@SuppressWarnings("deprecation")
	public int select${domainName}TotCnt(${domain_cap} ${domain_uncap}) throws Exception {
		return ((Integer) getSqlMapClientTemplate().queryForObject("${daoClass_uncap}.select${domainName}ListTotCnt", ${domain_uncap})).intValue();
	}

	public ${domain_cap} insert${domainName}(${domain_cap} ${domain_uncap}) throws Exception {
		return (${domain_cap}) insert("${daoClass_uncap}.insert${domainName}", ${domain_uncap});
	}

	public int update${domainName}(${domain_cap} ${domain_uncap}) throws Exception {
		return update("${daoClass_uncap}.update${domainName}", ${domain_uncap});
	}

	public int delete${domainName}(${domain_cap} ${domain_uncap}) throws Exception {
		return delete("${daoClass_uncap}.delete${domainName}", ${domain_uncap});
	}

}