#set($domain_cap = "$domainClass")
#set($domain_uncap = "$domain_cap.substring(0,1).toLowerCase()$domain_cap.substring(1)")
#set($tableName = $model.name)
#set($queryName = $tableName.replaceAll("_",""))
#set($queryName = "$queryName.substring(0,1).toUpperCase()$queryName.substring(1).toLowerCase()")
#set($primaryKeys = $model.primaryKeys)
#set($pks = $model.primaryKeys)
#set($pk = $listTool.get($pks, 0))
#set($pk_cap = $pk.javaName)
#set($pk_uncap = $pk.fieldName)
#foreach( $item in $primaryKey.split(":") )
	#set($ret = $pk_cap.add("$item.substring(0,1).toUpperCase()$item.substring(1).toLowerCase()"))
	#set($ret = $pk_uncap.add($item))
#end
##===================================
#if(${servicePackage_package} != "")
package ${servicePackage_package};
#end

import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;

import ${daoPackage_package}.$daoClass;
import ${domainPackage_package}.${domain_cap};
import ${servicePackage_package}.common.CommonService;
import ${servicePackage_package}.common.DaoBean;

/**
 * 프로그램 파일명 : ${serviceClass}.java
 * 
 * 프로그램 설명 : $tableName 테이블과 관련된 업무처리용 Service 클래스입니다.
 * 
 * 작 성 자 : ${writerName}
 * 
 * 작 성 일 : ${writeDate}
 * 
 * Copyright(c) 2013 DAEYOON Co. Ltd. All rights reserved.
 */
@DaoBean("${daoClass_uncap}")
@Service
public class ${serviceClass} extends CommonService<${domainClass}> {
	private static Logger logger = Logger.getLogger(${serviceClass}.class);

	public ${domainClass} read(#if($pks.size() > 0)#set($i = 1)#foreach($primaryKey in $pks)#if ($primaryKey.type=="INT" || $primaryKey.type=="DOUBLE" || $primaryKey.type=="FLOAT" || $primaryKey.type=="NUMBER" || $primaryKey.type=="int" || $primaryKey.type=="double" || $primaryKey.type=="float" || $primaryKey.type=="number")Integer $primaryKey.fieldName#else$primaryKey.javaType.replaceAll("java.lang.", "") $primaryKey.fieldName#end#if( $i < $pks.size() ), #end#set($i = $i + 1)#end#end) throws Exception {
		${domainClass} ${domain_uncap} = new ${domainClass}();
#foreach($primaryKey in $primaryKeys)
		${domain_uncap}.set$primaryKey.fieldName.substring(0,1).toUpperCase()$primaryKey.fieldName.substring(1)(${primaryKey.fieldName});
#end
		return super.read(${domain_uncap});
	}

	public Integer delete(#if($pks.size() > 0)#set($i = 1)#foreach($primaryKey in $pks)#if ($primaryKey.type=="INT" || $primaryKey.type=="DOUBLE" || $primaryKey.type=="FLOAT" || $primaryKey.type=="NUMBER" || $primaryKey.type=="int" || $primaryKey.type=="double" || $primaryKey.type=="float" || $primaryKey.type=="number")Integer $primaryKey.fieldName#else$primaryKey.javaType.replaceAll("java.lang.", "") $primaryKey.fieldName#end#if( $i < $pks.size() ), #end#set($i = $i + 1)#end#end) throws Exception {
		${domainClass} ${domain_uncap} = new ${domainClass}();
#foreach($primaryKey in $primaryKeys)
		${domain_uncap}.set$primaryKey.fieldName.substring(0,1).toUpperCase()$primaryKey.fieldName.substring(1)(${primaryKey.fieldName});
#end
		return super.delete(${domain_uncap});
	}
}
