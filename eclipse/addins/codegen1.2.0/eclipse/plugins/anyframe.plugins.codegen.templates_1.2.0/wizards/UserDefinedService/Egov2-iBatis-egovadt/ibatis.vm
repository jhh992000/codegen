#set($bind_char = "#")
#set($domain_cap = "$domainClass")
#set($postfixCutIndex =  $domain_cap.length() - 2)
#set($postfix = "$domain_cap.substring($postfixCutIndex,$domain_cap.length())")
#if($postfix.equals("VO"))
#set($domainName = "$domain_cap.substring(0,$postfixCutIndex)")
#else
#set($domainName = "$domain_cap")
#end
#set($domainName_uncap = "$domainName.substring(0,1).toLowerCase()$domainName.substring(1)")
#set($domain_uncap = "$domain_cap.substring(0,1).toLowerCase()$domain_cap.substring(1)")
#set($daoClass_uncap = "$daoClass.substring(0,1).toLowerCase()$daoClass.substring(1)")
#set($primaryKeys = $model.primaryKeys)
#set($pks = $model.primaryKeys)
#set($pk = $listTool.get($pks, 0))
#set($pk_cap = $pk.javaName)
#set($pk_uncap = $pk.fieldName)
#set($columns = $model.fields)
#set($pk_column = $listTool.get($primaryKeys,0))
#set($tableName = $model.name)
#set($queryName = $tableName.replaceAll("_",""))
#set($queryName = "$queryName.substring(0,1).toUpperCase()$queryName.substring(1).toLowerCase()")
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-config-2.dtd">

<sqlMap namespace="${domainName}">

	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="${domain_uncap}" type="${domainPackage_package}.${domain_cap}" />

	<resultMap id="${domain_uncap}-resultMap" class="${domain_uncap}">
#foreach($column in $columns)
#if ($column.javaType == "java.lang.Integer" || $column.javaType == "java.lang.Long" || $column.javaType == "java.lang.Double" || $column.javaType == "java.lang.Float")
		<result property="$column.fieldName" column="$column.name" nullValue="0" />
#elseif ($column.type == "DATE" || $column.type == "DATETIME")
		<result property="$column.fieldName" column="$column.name" javaType="java.util.Date" />
#else
		<result property="$column.fieldName" column="$column.name" nullValue="" />
#end
#end
	</resultMap>

	<sql id="${daoClass_uncap}.WHERE_FRAGMENT">
		<dynamic prepend="WHERE">
			<!--
#foreach($column in $columns)
#if ($column.javaType == "java.lang.Integer" || $column.javaType == "java.lang.Long" || $column.javaType == "java.lang.Double" || $column.javaType == "java.lang.Float")
			<isNotEmpty prepend="AND" property="${column.fieldName}">
				A.$column.name = #${column.fieldName}#
			</isNotEmpty>
#elseif ($column.type == "DATE" || $column.type == "DATETIME")
			<isNotEmpty prepend="AND" property="${column.fieldName}">
				AND DATE_FORMAT(A.$column.name, '%Y-%m-%d') = DATE_FORMAT(STR_TO_DATE(#{condition.${column.fieldName}}, '%Y%m%d'),'%Y-%m-%d')
			</isNotEmpty>
#else
			<isNotEmpty prepend="AND" property="${column.fieldName}">
#if ($column.size == 1)
				A.$column.name = #${column.fieldName}#
#else
				A.$column.name LIKE CONCAT('%', #${column.fieldName}#, '%')

#end
			</isNotEmpty>
#end
#end
			-->

			<isNotEmpty property="searchCondition">
				<isNotEmpty property="searchKeyword">
#foreach($column in $columns)
#if ($column.javaType == "java.lang.String")
					<isEqual prepend="AND" property="searchCondition" compareValue="${column.fieldName}">
#if ($column.size == 1)
						A.$column.name = ${bind_char}searchKeyword${bind_char}
#else
						A.$column.name LIKE CONCAT('%', ${bind_char}searchKeyword${bind_char}, '%')
#end
					</isEqual>
#else
					<isEqual prepend="AND" property="searchCondition" compareValue="${column.fieldName}">
						A.$column.name = ${bind_char}searchKeyword${bind_char}
					</isEqual>
#end
#end
				</isNotEmpty>
			</isNotEmpty>

		</dynamic>
	</sql>
#if($primaryKeys.size() == 1)

	<select id="${daoClass_uncap}.select${domainName}NextId" resultClass="int">
		SELECT IFNULL(MAX(${pk_column.name}),0)+1 FROM $tableName
	</select>
#elseif($primaryKeys.size() > 1)

	<select id="${daoClass_uncap}.select${domainName}NextId" parameterClass="${domain_uncap}" resultClass="int">
		/* ${daoClass_uncap}.select${domainName}NextId */
		SELECT
			IFNULL(MAX(A.${pk_column.name}),0)+1
		FROM
			$tableName A
		#if($primaryKeys.size() > 0)WHERE
			#set($i = 1)#foreach($primaryKey in $primaryKeys)A.$primaryKey.name = ${bind_char}$primaryKey.fieldName${bind_char}#if( $i < $primaryKeys.size() )

		AND
			#end#set($i = $i + 1)#end#end

	</select>
#end

	<select id="${daoClass_uncap}.select${domainName}" parameterClass="${domain_uncap}" resultMap="${domain_uncap}-resultMap">
		/* ${daoClass_uncap}.select${domainName} */
		SELECT
			#set($i = 1)#foreach($column in $columns)A.$column.name#if( $i < $columns.size() ), #end#if( $i%5 == 0 )

			#end#set($i = $i + 1)#end

		FROM
			$tableName A
		#if($primaryKeys.size() > 0)WHERE
			#set($i = 1)#foreach($primaryKey in $primaryKeys)A.$primaryKey.name = ${bind_char}$primaryKey.fieldName${bind_char}#if( $i < $primaryKeys.size() )

		AND
			#end#set($i = $i + 1)#end#end

	</select>

	<select id="${daoClass_uncap}.select${domainName}AllList" parameterClass="${domain_uncap}" resultMap="${domain_uncap}-resultMap">
		/* ${daoClass_uncap}.select${domainName}AllList */
		SELECT
			#set($i = 1)#foreach($column in $columns)A.$column.name#if( $i < $columns.size() ), #end#if( $i%5 == 0 )

			#end#set($i = $i + 1)#end

		FROM
			$tableName A
		<include refid="${daoClass_uncap}.WHERE_FRAGMENT" />
		#if($primaryKeys.size() > 0)ORDER BY
			#set($i = 1)#foreach($primaryKey in $primaryKeys)A.$primaryKey.name DESC#if( $i < $primaryKeys.size() ) , #end#set($i = $i + 1)#end#end

	</select>

	<select id="${daoClass_uncap}.select${domainName}List" parameterClass="${domain_uncap}" resultMap="${domain_uncap}-resultMap">
		/* ${daoClass_uncap}.select${domainName}List */
		SELECT
			ALL_LIST.*
		FROM
		(
			SELECT
				#set($i = 1)#foreach($column in $columns)A.$column.name#if( $i < $columns.size() ), #end#if( $i%5 == 0 )

				#end#set($i = $i + 1)#end

			FROM
				$tableName A
			<include refid="${daoClass_uncap}.WHERE_FRAGMENT" />
			#if($primaryKeys.size() > 0)ORDER BY
				#set($i = 1)#foreach($primaryKey in $primaryKeys)A.$primaryKey.name DESC#if( $i < $primaryKeys.size() ) , #end#set($i = $i + 1)#end#end

		) ALL_LIST
		LIMIT ${bind_char}firstIndex${bind_char}, ${bind_char}recordCountPerPage${bind_char}
	</select>

	<select id="${daoClass_uncap}.select${domainName}ListTotCnt" parameterClass="${domain_uncap}" resultClass="int">
		/* ${daoClass_uncap}.select${domainName}ListTotCnt */
		SELECT
			COUNT(*) totcnt
		FROM
			$tableName A
		<include refid="${daoClass_uncap}.WHERE_FRAGMENT" />
	</select>

	<insert id="${daoClass_uncap}.insert${domainName}" parameterClass="${domain_uncap}">
		/* ${daoClass_uncap}.insert${domainName} */
		INSERT INTO $tableName ( #set($i = 1)#foreach($column in $columns)$column.name#if( $i < $columns.size() ), #end#set($i = $i + 1)#end )
		VALUES ( #set($i = 1)#foreach($column in $columns)${bind_char}$column.fieldName${bind_char}#if( $i < $columns.size() ), #end#set($i = $i + 1)#end  )
	</insert>

	<update id="${daoClass_uncap}.update${domainName}" parameterClass="${domain_uncap}">
		/* ${daoClass_uncap}.update${domainName} */
		UPDATE
			$tableName
		SET
#set($nPKCount = ($columns.size()-$pks.size()))
#set($i = 1)#foreach($column in $columns)
#set($isPk = "false")
#foreach($pk in $pks)
#if ($column.fieldName==$pk.fieldName)
#set($isPk = "true")
#end
#end
#if ($isPk=="false")
			$column.name = ${bind_char}$column.fieldName${bind_char}#if( $i < $nPKCount ),
#end#set($i = $i + 1)#end#end

		#if($primaryKeys.size() > 0)WHERE
			#set($i = 1)#foreach($primaryKey in $primaryKeys)$primaryKey.name = ${bind_char}$primaryKey.fieldName${bind_char}#if( $i < $primaryKeys.size() )

		AND
			#end#set($i = $i + 1)#end#end

	</update>

	<delete id="${daoClass_uncap}.delete${domainName}" parameterClass="${domain_uncap}">
		/* ${daoClass_uncap}.delete${domainName} */
		DELETE FROM
			$tableName
		#if($primaryKeys.size() > 0)WHERE
			#set($i = 1)#foreach($primaryKey in $primaryKeys)$primaryKey.name = ${bind_char}$primaryKey.fieldName${bind_char}#if( $i < $primaryKeys.size() )

		AND
			#end#set($i = $i + 1)#end#end

	</delete>

</sqlMap>